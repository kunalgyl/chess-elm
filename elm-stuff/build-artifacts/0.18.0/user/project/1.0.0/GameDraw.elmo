var _user$project$GameDraw$roundFloatString = function (f) {
	var characteristic = _elm_lang$core$Basics$truncate(f);
	var mantissa = _elm_lang$core$Basics$abs(
		f - _elm_lang$core$Basics$toFloat(characteristic));
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(characteristic),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'.',
			_elm_lang$core$Basics$toString(
				_elm_lang$core$Basics$truncate(mantissa * 100.0))));
};
var _user$project$GameDraw$checkSugg = F2(
	function (msugg, sq) {
		if (_user$project$Game$isJust(msugg)) {
			var sugg = A2(_user$project$Game$justGet, msugg, 'checkSugg - impossible');
			return _elm_lang$core$Native_Utils.eq(
				sq,
				_elm_lang$core$Tuple$first(sugg)) || _elm_lang$core$Native_Utils.eq(
				sq,
				_elm_lang$core$Tuple$second(sugg));
		} else {
			return false;
		}
	});
var _user$project$GameDraw$buttonStyle = function (sss) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'background', _1: '-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #768d87), color-stop(1, #6c7c7c))'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background', _1: '-moz-linear-gradient(top, #768d87 5%, #6c7c7c 100%)'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background', _1: '-webkit-linear-gradient(top, #768d87 5%, #6c7c7c 100%)'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'background', _1: '-o-linear-gradient(top, #768d87 5%, #6c7c7c 100%)'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background', _1: '-ms-linear-gradient(top, #768d87 5%, #6c7c7c 100%)'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background', _1: 'linear-gradient(to bottom, #768d87 5%, #6c7c7c 100%)'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'filter', _1: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#768d87\', endColorstr=\'#6c7c7c\',GradientType=0)'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'background', _1: '-color:#768d87'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: '-moz-border-radius', _1: '5px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: '-webkit-border-radius', _1: '5px'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '5px'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #566963'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'color', _1: '#ffffff'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Arial'},
																		_1: {
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '10px'},
																			_1: {
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'font-weight', _1: 'bold'},
																				_1: {
																					ctor: '::',
																					_0: {ctor: '_Tuple2', _0: 'margin-botton', _1: '0.5px'},
																					_1: {
																						ctor: '::',
																						_0: {ctor: '_Tuple2', _0: 'text-shadow', _1: '0px -0.5px 0px #2b665e'},
																						_1: {
																							ctor: '::',
																							_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'},
																							_1: {
																								ctor: '::',
																								_0: {ctor: '_Tuple2', _0: 'outline', _1: 'none'},
																								_1: {ctor: '[]'}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		sss);
};
var _user$project$GameDraw$secondsToString = function (sec) {
	var minutes = (sec / 60) | 0;
	var seconds = A2(_elm_lang$core$Basics_ops['%'], sec, 60);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(minutes),
		A2(
			_elm_lang$core$Basics_ops['++'],
			':',
			(_elm_lang$core$Native_Utils.cmp(seconds, 10) < 0) ? A2(
				_elm_lang$core$Basics_ops['++'],
				'0',
				_elm_lang$core$Basics$toString(seconds)) : _elm_lang$core$Basics$toString(seconds)));
};
var _user$project$GameDraw$isJustEq = F2(
	function (ma, a) {
		var _p0 = ma;
		if (_p0.ctor === 'Just') {
			return _elm_lang$core$Native_Utils.eq(_p0._0, a);
		} else {
			return false;
		}
	});
var _user$project$GameDraw$TogDepth = {ctor: 'TogDepth'};
var _user$project$GameDraw$CheckAI = {ctor: 'CheckAI'};
var _user$project$GameDraw$UpdateFEN = {ctor: 'UpdateFEN'};
var _user$project$GameDraw$Change = function (a) {
	return {ctor: 'Change', _0: a};
};
var _user$project$GameDraw$drawFenControls = function () {
	var load_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$UpdateFEN),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '7px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Load'),
			_1: {ctor: '[]'}
		});
	var input_box = A2(
		_elm_lang$html$Html$input,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$placeholder('FEN'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onInput(_user$project$GameDraw$Change),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'width', _1: '80px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'height', _1: '12px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		},
		{ctor: '[]'});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border-bottom', _1: '1px solid black'},
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: input_box,
			_1: {
				ctor: '::',
				_0: load_button,
				_1: {ctor: '[]'}
			}
		});
}();
var _user$project$GameDraw$MoveAI = function (a) {
	return {ctor: 'MoveAI', _0: a};
};
var _user$project$GameDraw$MakeSugg = function (a) {
	return {ctor: 'MakeSugg', _0: a};
};
var _user$project$GameDraw$TogEval = {ctor: 'TogEval'};
var _user$project$GameDraw$Suggest = {ctor: 'Suggest'};
var _user$project$GameDraw$TogAI = function (a) {
	return {ctor: 'TogAI', _0: a};
};
var _user$project$GameDraw$drawEval = F4(
	function (depth, evaluate, ai, evaluation) {
		var eval_button = A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$TogEval),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Eval'),
				_1: {ctor: '[]'}
			});
		var tog_ai_button = A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$GameDraw$TogAI(_user$project$PColor$Black)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'color',
									_1: ai ? 'green' : 'red'
								},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('AI'),
				_1: {ctor: '[]'}
			});
		var tog_depth_button = A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$TogDepth),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '7px'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(depth)),
				_1: {ctor: '[]'}
			});
		var ev = A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '7px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'width', _1: '28px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'default'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'font-size', _1: '12px'},
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					evaluate ? _user$project$GameDraw$roundFloatString(-1 * evaluation) : ''),
				_1: {ctor: '[]'}
			});
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'border-bottom', _1: '1px solid black'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'float', _1: 'bottom'},
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: eval_button,
				_1: {
					ctor: '::',
					_0: ev,
					_1: {
						ctor: '::',
						_0: tog_ai_button,
						_1: {
							ctor: '::',
							_0: tog_depth_button,
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _user$project$GameDraw$Noop = {ctor: 'Noop'};
var _user$project$GameDraw$MvIndexUpdate = function (a) {
	return {ctor: 'MvIndexUpdate', _0: a};
};
var _user$project$GameDraw$MvHistory = function (a) {
	return {ctor: 'MvHistory', _0: a};
};
var _user$project$GameDraw$drawMoveHistoryControls = function (isprev) {
	var prev_mv_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_user$project$GameDraw$MvIndexUpdate(1)),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '6px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('⟸'),
			_1: {ctor: '[]'}
		});
	var next_mv_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_user$project$GameDraw$MvIndexUpdate(-1)),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '6px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('⟹'),
			_1: {ctor: '[]'}
		});
	var first_mv_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_user$project$GameDraw$MvIndexUpdate(1000)),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '6px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('⟽'),
			_1: {ctor: '[]'}
		});
	var last_mv_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_user$project$GameDraw$MvHistory(0)),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '6px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('⟾'),
			_1: {ctor: '[]'}
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border-bottom', _1: '1px solid black'},
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: first_mv_button,
			_1: {
				ctor: '::',
				_0: prev_mv_button,
				_1: {
					ctor: '::',
					_0: next_mv_button,
					_1: {
						ctor: '::',
						_0: last_mv_button,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$GameDraw$Decrement = function (a) {
	return {ctor: 'Decrement', _0: a};
};
var _user$project$GameDraw$Increment = function (a) {
	return {ctor: 'Increment', _0: a};
};
var _user$project$GameDraw$drawCapturedCastles = F5(
	function (p, pcs, c, mi, time) {
		var sorted_pcs = A2(_elm_lang$core$List$sortBy, _user$project$Piece$toPoint, pcs);
		var sc = _elm_lang$core$Native_Utils.eq(p, _user$project$PColor$White) ? c.wsc : c.bsc;
		var lc = _elm_lang$core$Native_Utils.eq(p, _user$project$PColor$White) ? c.wlc : c.blc;
		var toDiv = function (pc) {
			var bsq = A2(
				_user$project$Board$NotEmpty,
				_user$project$PColor$otherColor(p),
				pc);
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'square'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'width', _1: '15px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'height', _1: '15px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'default'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'font-size', _1: '12px'},
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_user$project$Board$toString(bsq)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				});
		};
		var toCastleNot = F2(
			function (b, s) {
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'default'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
														_1: {
															ctor: '::',
															_0: {
																ctor: '_Tuple2',
																_0: 'color',
																_1: b ? 'green' : 'red'
															},
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(s),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			});
		var maybeIntDiv = _user$project$Game$isJust(mi) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'default'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '12px'},
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'+',
							_elm_lang$core$Basics$toString(
								A2(_user$project$Game$justGet, mi, 'impossible - drawCapturedCastles')))),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		var timeDiv = {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'default'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_user$project$GameDraw$secondsToString((time / 10) | 0)),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		var incrButton = {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$GameDraw$Increment(p)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('+'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		var decrButton = {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$GameDraw$Decrement(p)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '5px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('-'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '400px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid black'},
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				incrButton,
				A2(
					_elm_lang$core$Basics_ops['++'],
					timeDiv,
					A2(
						_elm_lang$core$Basics_ops['++'],
						decrButton,
						A2(
							_elm_lang$core$Basics_ops['++'],
							A2(toCastleNot, sc, 'SC'),
							A2(
								_elm_lang$core$Basics_ops['++'],
								A2(toCastleNot, lc, 'LC '),
								A2(
									_elm_lang$core$Basics_ops['++'],
									A2(_elm_lang$core$List$map, toDiv, sorted_pcs),
									maybeIntDiv)))))));
	});
var _user$project$GameDraw$Pause = {ctor: 'Pause'};
var _user$project$GameDraw$Tick = {ctor: 'Tick'};
var _user$project$GameDraw$Previous = {ctor: 'Previous'};
var _user$project$GameDraw$Reset = {ctor: 'Reset'};
var _user$project$GameDraw$drawBox = function (s) {
	var text_div = A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(s),
			_1: {ctor: '[]'}
		});
	var reset_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$Reset),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin', _1: '30px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '60px'},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('⏏'),
			_1: {ctor: '[]'}
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '100px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid black'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'z-index', _1: '1'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: text_div,
			_1: {
				ctor: '::',
				_0: reset_button,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$GameDraw$drawControls = function (ispaused) {
	var reset_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$Reset),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '9px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('⏏'),
			_1: {ctor: '[]'}
		});
	var back_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$Previous),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '9px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('↩'),
			_1: {ctor: '[]'}
		});
	var pause_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$Pause),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '9px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				ispaused ? '▶' : '❚❚'),
			_1: {ctor: '[]'}
		});
	var suggest_button = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$GameDraw$Suggest),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '9px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('?'),
			_1: {ctor: '[]'}
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border-bottom', _1: '1px solid black'},
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: reset_button,
			_1: {
				ctor: '::',
				_0: back_button,
				_1: {
					ctor: '::',
					_0: pause_button,
					_1: {
						ctor: '::',
						_0: suggest_button,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$GameDraw$drawHistory = F6(
	function (mvs, depth, evaluate, ai, evaluation, paused) {
		var len_mvs = _elm_lang$core$List$length(mvs);
		var toHist = F2(
			function (i, _p1) {
				var _p2 = _p1;
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'square'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'height', _1: '15px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'width', _1: '65px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'vertical-align', _1: 'top'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '6px'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$GameDraw$MvHistory(i)),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString((((len_mvs - i) + 1) / 2) | 0),
										A2(
											_elm_lang$core$Basics_ops['++'],
											'.',
											A2(
												_elm_lang$core$Basics_ops['++'],
												A2(_user$project$Piece$toString, _p2._1, _p2._0),
												A2(
													_elm_lang$core$Basics_ops['++'],
													_user$project$Game$isJust(_p2._4) ? 'x' : ' ',
													A2(
														_elm_lang$core$Basics_ops['++'],
														_user$project$Square$toStr(_p2._3),
														_user$project$Game$isJust(_p2._5) ? '+' : '')))))),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
			});
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: '444px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid black'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'overflow-y', _1: 'scroll'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'overflow-x', _1: 'hidden'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'vertical-align', _1: 'top'},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			A2(
				F2(
					function (x, y) {
						return A2(_elm_lang$core$Basics_ops['++'], x, y);
					}),
				{
					ctor: '::',
					_0: _user$project$GameDraw$drawFenControls,
					_1: {ctor: '[]'}
				},
				A2(
					F2(
						function (x, y) {
							return A2(_elm_lang$core$Basics_ops['++'], x, y);
						}),
					{
						ctor: '::',
						_0: A4(_user$project$GameDraw$drawEval, depth, evaluate, ai, evaluation),
						_1: {ctor: '[]'}
					},
					A2(
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							}),
						{
							ctor: '::',
							_0: _user$project$GameDraw$drawControls(paused),
							_1: {ctor: '[]'}
						},
						A2(
							F2(
								function (x, y) {
									return A2(_elm_lang$core$Basics_ops['++'], x, y);
								}),
							{
								ctor: '::',
								_0: _user$project$GameDraw$drawMoveHistoryControls(true),
								_1: {ctor: '[]'}
							},
							_elm_lang$core$List$reverse(
								A2(_elm_lang$core$List$indexedMap, toHist, mvs)))))));
	});
var _user$project$GameDraw$ClickSquare = function (a) {
	return {ctor: 'ClickSquare', _0: a};
};
var _user$project$GameDraw$drawBoard = F5(
	function (b, ms, ms_k, mvs, msugg) {
		var sq_bg = function (sq) {
			return A2(_user$project$GameDraw$isJustEq, ms_k, sq) ? 'Crimson' : (A2(_user$project$GameDraw$isJustEq, ms, sq) ? 'Aquamarine' : (A2(_elm_lang$core$List$member, sq, mvs) ? (A2(_user$project$Game$isOccupied, b, sq) ? 'LightCoral' : _user$project$Square$toOtherColorString(sq)) : (A2(_user$project$GameDraw$checkSugg, msugg, sq) ? 'purple' : _user$project$Square$toColorString(sq))));
		};
		var toDiv = F2(
			function (sq, bsq) {
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'square'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'backgroundColor',
										_1: sq_bg(sq)
									},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'width', _1: '50px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'height', _1: '50px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'vertical-align', _1: 'top'},
														_1: {
															ctor: '::',
															_0: {
																ctor: '_Tuple2',
																_0: 'cursor',
																_1: (A2(_user$project$Game$isOccupied, b, sq) || A2(_elm_lang$core$List$member, sq, mvs)) ? 'pointer' : 'default'
															},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'font-size', _1: '40px'},
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$GameDraw$ClickSquare(sq)),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_user$project$Board$toString(bsq)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
			});
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '400px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: '400px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin', _1: '0 auto'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid black'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'z-index', _1: '-1'},
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			_chendrix$elm_matrix$Matrix$flatten(
				_elm_lang$core$Array$fromList(
					_elm_lang$core$List$reverse(
						_elm_lang$core$Array$toList(
							A2(_chendrix$elm_matrix$Matrix$mapWithLocation, toDiv, b))))));
	});
