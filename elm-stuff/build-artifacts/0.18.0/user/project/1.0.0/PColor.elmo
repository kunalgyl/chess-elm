var _user$project$PColor$pawnRank = function (c) {
	var _p0 = c;
	if (_p0.ctor === 'White') {
		return 1;
	} else {
		return 6;
	}
};
var _user$project$PColor$toStringAlt = function (c) {
	var _p1 = c;
	if (_p1.ctor === 'Black') {
		return 'B';
	} else {
		return 'W';
	}
};
var _user$project$PColor$toString = function (c) {
	var _p2 = c;
	if (_p2.ctor === 'Black') {
		return 'Black';
	} else {
		return 'White';
	}
};
var _user$project$PColor$White = {ctor: 'White'};
var _user$project$PColor$Black = {ctor: 'Black'};
var _user$project$PColor$otherColor = function (c) {
	var _p3 = c;
	if (_p3.ctor === 'Black') {
		return _user$project$PColor$White;
	} else {
		return _user$project$PColor$Black;
	}
};
var _user$project$PColor$toColor = function (c) {
	var _p4 = c;
	switch (_p4.valueOf()) {
		case 'B':
			return _user$project$PColor$Black;
		case 'W':
			return _user$project$PColor$White;
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'PColor',
				{
					start: {line: 16, column: 5},
					end: {line: 19, column: 80}
				},
				_p4)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'incorrect color: \'',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$String$fromChar(c),
						'\'')));
	}
};
